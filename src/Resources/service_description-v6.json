{
    "baseUri": "https://discordapp.com/api/v6",
    "version": 6,
    "operations": {
        "guild": {
            "updateNick": {
                "category": "guild",
                "url": "/guilds/{guild.id}/members/@me/nick",
                "method": "PATCH",
                "name": "Update Current Users' Nickname",
                "description": "Updates the bots nickname in a server",
                "responseNote": "Returns the nick",
                "responseTypes": [],
                "parameters": {
                    "guild.id": {
                        "type": "snowflake",
                        "location": "uri"
                    },
                    "nick": {
                        "type": "string",
                        "description": "Nickname to set",
                        "location": "json"
                    }
                }
            }
        },
        "audit-log": {},
        "channel": {},
        "emoji": {},
        "invite": {},
        "user": {},
        "voice": {},
        "webhook": {},
        "gateway": {},
        "oauth2": {},
        "permissions": {}
    },
    "models": {
        "guild": {
            "guild": {
                "link": "https://discordapp.com/developers/docs/resources/guild#guild-object",
                "resource": "guild",
                "description": "",
                "type": "object",
                "properties": {
                    "id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "guild id"
                    },
                    "name": {
                        "location": "json",
                        "type": "string",
                        "description": "guild name (2-100 characters)"
                    },
                    "icon": {
                        "location": "json",
                        "type": "string",
                        "nullable": true,
                        "description": "icon hash"
                    },
                    "splash": {
                        "location": "json",
                        "type": "string",
                        "nullable": true,
                        "description": "splash hash"
                    },
                    "owner?": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether or not the user is the owner of the guild",
                        "default": false
                    },
                    "owner_id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "id of owner"
                    },
                    "permissions?": {
                        "location": "json",
                        "type": "integer",
                        "description": "total permissions for the user in the guild (does not include channel overrides)"
                    },
                    "region": {
                        "location": "json",
                        "type": "string",
                        "description": "voice region id for the guild"
                    },
                    "afk_channel_id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "id of afk channel"
                    },
                    "afk_timeout": {
                        "location": "json",
                        "type": "integer",
                        "description": "afk timeout in seconds"
                    },
                    "embed_enabled?": {
                        "location": "json",
                        "type": "bool",
                        "description": "is this guild embeddable (e.g. widget)",
                        "default": false
                    },
                    "embed_channel_id?": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "id of embedded channel"
                    },
                    "verification_level": {
                        "location": "json",
                        "type": "integer",
                        "description": "verification level required for the guild"
                    },
                    "default_message_notifications": {
                        "location": "json",
                        "type": "integer",
                        "description": "default message notifications level"
                    },
                    "explicit_content_filter": {
                        "location": "json",
                        "type": "integer",
                        "description": "explicit content filter level"
                    },
                    "roles": {
                        "location": "json",
                        "type": "array",
                        "description": "roles in the guild"
                    },
                    "emojis": {
                        "location": "json",
                        "type": "array",
                        "description": "custom guild emojis"
                    },
                    "features": {
                        "location": "json",
                        "type": "array",
                        "description": "enabled guild features"
                    },
                    "mfa_level": {
                        "location": "json",
                        "type": "integer",
                        "description": "required MFA level for the guild"
                    },
                    "application_id": {
                        "location": "json",
                        "type": "snowflake",
                        "nullable": true,
                        "description": "application id of the guild creator if it is bot-created"
                    },
                    "widget_enabled?": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether or not the server widget is enabled",
                        "default": false
                    },
                    "widget_channel_id?": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "the channel id for the server widget"
                    },
                    "system_channel_id": {
                        "location": "json",
                        "type": "snowflake",
                        "nullable": true,
                        "description": "the id of the channel to which system messages are sent"
                    },
                    "joined_at?": {
                        "location": "json",
                        "type": "ISO8601 timestamp",
                        "description": "when this guild was joined at"
                    },
                    "large?": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether this is considered a large guild",
                        "default": false
                    },
                    "unavailable?": {
                        "location": "json",
                        "type": "bool",
                        "description": "is this guild unavailable",
                        "default": false
                    },
                    "member_count?": {
                        "location": "json",
                        "type": "integer",
                        "description": "total number of members in this guild"
                    },
                    "voice_states?": {
                        "location": "json",
                        "type": "array",
                        "description": "(without the guild_id key)"
                    },
                    "members?": {
                        "location": "json",
                        "type": "array",
                        "description": "users in the guild"
                    },
                    "channels?": {
                        "location": "json",
                        "type": "array",
                        "description": "channels in the guild"
                    },
                    "presences?": {
                        "location": "json",
                        "type": "array",
                        "description": "presences of the users in the guild"
                    }
                }
            },
            "unavailableGuild": {
                "link": "https://discordapp.com/developers/docs/resources/guild#unavailable-guild-object",
                "resource": "guild",
                "description": "",
                "type": "object",
                "properties": {}
            },
            "guildEmbed": {
                "link": "https://discordapp.com/developers/docs/resources/guild#guild-embed-object",
                "resource": "guild",
                "description": "",
                "type": "object",
                "properties": {
                    "enabled": {
                        "location": "json",
                        "type": "bool",
                        "description": "if the embed is enabled",
                        "default": false
                    },
                    "channel_id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "the embed channel id"
                    }
                }
            },
            "guildMember": {
                "link": "https://discordapp.com/developers/docs/resources/guild#guild-member-object",
                "resource": "guild",
                "description": "",
                "type": "object",
                "properties": {
                    "user": {
                        "location": "json",
                        "type": "object",
                        "description": "user object"
                    },
                    "nick?": {
                        "location": "json",
                        "type": "string",
                        "description": "this users guild nickname (if one is set)"
                    },
                    "roles": {
                        "location": "json",
                        "type": "array",
                        "description": "array of role object ids"
                    },
                    "joined_at": {
                        "location": "json",
                        "type": "ISO8601 timestamp",
                        "description": "when the user joined the guild"
                    },
                    "deaf": {
                        "location": "json",
                        "type": "bool",
                        "description": "if the user is deafened",
                        "default": false
                    },
                    "mute": {
                        "location": "json",
                        "type": "bool",
                        "description": "if the user is muted",
                        "default": false
                    }
                }
            },
            "integration": {
                "link": "https://discordapp.com/developers/docs/resources/guild#integration-object",
                "resource": "guild",
                "description": "",
                "type": "object",
                "properties": {
                    "id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "integration id"
                    },
                    "name": {
                        "location": "json",
                        "type": "string",
                        "description": "integration name"
                    },
                    "type": {
                        "location": "json",
                        "type": "string",
                        "description": "integration type (twitch, youtube, etc)"
                    },
                    "enabled": {
                        "location": "json",
                        "type": "bool",
                        "description": "is this integration enabled",
                        "default": false
                    },
                    "syncing": {
                        "location": "json",
                        "type": "bool",
                        "description": "is this integration syncing",
                        "default": false
                    },
                    "role_id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "id that this integration uses for \"subscribers\""
                    },
                    "expire_behavior": {
                        "location": "json",
                        "type": "integer",
                        "description": "the behavior of expiring subscribers"
                    },
                    "expire_grace_period": {
                        "location": "json",
                        "type": "integer",
                        "description": "the grace period before expiring subscribers"
                    },
                    "user": {
                        "location": "json",
                        "type": "object",
                        "description": "user for this integration"
                    },
                    "account": {
                        "location": "json",
                        "type": "object",
                        "description": "integration account information"
                    },
                    "synced_at": {
                        "location": "json",
                        "type": "ISO8601 timestamp",
                        "description": "when this integration was last synced"
                    }
                }
            },
            "integrationAccount": {
                "link": "https://discordapp.com/developers/docs/resources/guild#integration-account-object",
                "resource": "guild",
                "description": "",
                "type": "object",
                "properties": {
                    "id": {
                        "location": "json",
                        "type": "string",
                        "description": "id of the account"
                    },
                    "name": {
                        "location": "json",
                        "type": "string",
                        "description": "name of the account"
                    }
                }
            },
            "ban": {
                "link": "https://discordapp.com/developers/docs/resources/guild#ban-object",
                "resource": "guild",
                "description": "",
                "type": "object",
                "properties": {
                    "reason": {
                        "location": "query",
                        "type": "string",
                        "description": "reason for the ban"
                    },
                    "user": {
                        "location": "json",
                        "type": "object",
                        "description": "the banned user"
                    },
                    "name": {
                        "location": "json",
                        "type": "string",
                        "description": "name of the role"
                    },
                    "region": {
                        "location": "json",
                        "type": "string",
                        "description": "guild voice region id"
                    },
                    "icon": {
                        "location": "json",
                        "type": "string",
                        "description": "base64 128x128 jpeg image for the guild icon"
                    },
                    "verification_level": {
                        "location": "json",
                        "type": "integer",
                        "description": "verification level"
                    },
                    "default_message_notifications": {
                        "location": "json",
                        "type": "integer",
                        "description": "default message notification level"
                    },
                    "explicit_content_filter": {
                        "location": "json",
                        "type": "integer",
                        "description": "explicit content filter level"
                    },
                    "roles": {
                        "location": "json",
                        "type": "array",
                        "description": "array of role ids the member is assigned",
                        "extra": {
                            "Permission": "MANAGE_ROLES"
                        }
                    },
                    "channels": {
                        "location": "json",
                        "type": "array",
                        "description": "new guild's channels"
                    },
                    "afk_channel_id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "id for afk channel"
                    },
                    "afk_timeout": {
                        "location": "json",
                        "type": "integer",
                        "description": "afk timeout in seconds"
                    },
                    "owner_id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "user id to transfer guild ownership to (must be owner)"
                    },
                    "splash": {
                        "location": "json",
                        "type": "string",
                        "description": "base64 128x128 jpeg image for the guild splash (VIP only)"
                    },
                    "system_channel_id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "the id of the channel to which system messages are sent"
                    },
                    "type": {
                        "location": "json",
                        "type": "string",
                        "description": "the integration type"
                    },
                    "bitrate": {
                        "location": "json",
                        "type": "integer",
                        "description": "the bitrate (in bits) of the voice channel (voice only)"
                    },
                    "user_limit": {
                        "location": "json",
                        "type": "integer",
                        "description": "the user limit of the voice channel (voice only)"
                    },
                    "permission_overwrites": {
                        "location": "json",
                        "type": "array",
                        "description": "the channel's permission overwrites"
                    },
                    "parent_id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "id of the parent category for a channel"
                    },
                    "nsfw": {
                        "location": "json",
                        "type": "bool",
                        "description": "if the channel is nsfw",
                        "default": false
                    },
                    "id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "the integration id"
                    },
                    "position": {
                        "location": "json",
                        "type": "integer",
                        "description": "sorting position of the role"
                    },
                    "limit": {
                        "location": "query",
                        "type": "integer",
                        "description": "max number of members to return (1-1000)",
                        "default": 1
                    },
                    "after": {
                        "location": "query",
                        "type": "snowflake",
                        "description": "the highest user id in the previous page"
                    },
                    "access_token": {
                        "location": "json",
                        "type": "string",
                        "description": "an oauth2 access token granted with the guilds.join to the bot's application for the user you want to add to the guild",
                        "extra": {
                            "Permission": ""
                        }
                    },
                    "nick": {
                        "location": "json",
                        "type": "string",
                        "description": "value to set users nickname to",
                        "extra": {
                            "Permission": "CHANGE_NICKNAME"
                        }
                    },
                    "mute": {
                        "location": "json",
                        "type": "bool",
                        "description": "if the user is muted",
                        "default": false,
                        "extra": {
                            "Permission": "MUTE_MEMBERS"
                        }
                    },
                    "deaf": {
                        "location": "json",
                        "type": "bool",
                        "description": "if the user is deafened",
                        "default": false,
                        "extra": {
                            "Permission": "DEAFEN_MEMBERS"
                        }
                    },
                    "channel_id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "id of channel to move user to (if they are connected to voice)",
                        "extra": {
                            "Permission": "MOVE_MEMBERS"
                        }
                    },
                    "delete-message-days": {
                        "location": "query",
                        "type": "integer",
                        "description": "number of days to delete messages for (0-7)"
                    },
                    "permissions": {
                        "location": "json",
                        "type": "integer",
                        "description": "bitwise of the enabled/disabled permissions"
                    },
                    "color": {
                        "location": "json",
                        "type": "integer",
                        "description": "RGB color value"
                    },
                    "hoist": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether the role should be displayed separately in the sidebar",
                        "default": false
                    },
                    "mentionable": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether the role should be mentionable",
                        "default": false
                    },
                    "days": {
                        "location": "query",
                        "type": "integer",
                        "description": "number of days to prune (1 or more)"
                    },
                    "expire_behavior": {
                        "location": "json",
                        "type": "integer",
                        "description": "the behavior when an integration subscription lapses (see the integration object documentation)"
                    },
                    "expire_grace_period": {
                        "location": "json",
                        "type": "integer",
                        "description": "period (in seconds) where the integration will ignore lapsed subscriptions"
                    },
                    "enable_emoticons": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether emoticons should be synced for this integration (twitch only currently)",
                        "default": false
                    }
                }
            },
            "role": {
                "category": "guild",
                "description": "Roles represent a set of permissions attached to a group of users. Roles have unique names, colors, and can be pinned to the side bar, causing their members to be listed separately. Roles are unique per guild, and can have separate permission profiles for the global context (guild) and channel context.",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "snowflake",
                        "description": "role id"
                    },
                    "name": {
                        "type": "string",
                        "description": "role name"
                    },
                    "color": {
                        "type": "integer",
                        "description": "integer representation of hexadecimal color code"
                    },
                    "hoist": {
                        "type": "bool",
                        "description": "if this role is pinned in the user listing"
                    },
                    "position": {
                        "type": "integer",
                        "description": "position of this role"
                    },
                    "permissions": {
                        "type": "integer",
                        "description": "permission bit set"
                    },
                    "managed": {
                        "type": "bool",
                        "description": "whether this role is managed by an integration"
                    },
                    "mentionable": {
                        "type": "bool",
                        "description": "whether this role is mentionable"
                    }
                }
            }
        },
        "audit-log": {
            "auditLog": {
                "link": "https://discordapp.com/developers/docs/resources/audit-log#audit-log-object",
                "resource": "audit-log",
                "description": "",
                "type": "object",
                "properties": {
                    "webhooks": {
                        "location": "json",
                        "type": "array",
                        "description": "list of webhooks found in the audit log"
                    },
                    "users": {
                        "location": "json",
                        "type": "array",
                        "description": "list of users found in the audit log"
                    },
                    "audit_log_entries": {
                        "location": "json",
                        "type": "array",
                        "description": "list of audit log entires"
                    }
                }
            },
            "auditLogEntry": {
                "link": "https://discordapp.com/developers/docs/resources/audit-log#audit-log-entry-object",
                "resource": "audit-log",
                "description": "",
                "type": "object",
                "properties": {
                    "target_id": {
                        "location": "json",
                        "type": "string",
                        "nullable": true,
                        "description": "id of the affected entity (webhook, user, role, etc.)"
                    },
                    "changes?": {
                        "location": "json",
                        "type": "array",
                        "description": "changes made to the target_id"
                    },
                    "user_id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "the user who made the changes"
                    },
                    "id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "id of the entry"
                    },
                    "action_type": {
                        "location": "json",
                        "type": "audit log event",
                        "description": "type of action that occured"
                    },
                    "options?": {
                        "location": "json",
                        "type": "optional audit entry info",
                        "description": "additional info for certain action types"
                    },
                    "reason?": {
                        "location": "json",
                        "type": "string",
                        "description": "the reason for the change"
                    }
                }
            },
            "auditLogChange": {
                "link": "https://discordapp.com/developers/docs/resources/audit-log#audit-log-change-object",
                "resource": "audit-log",
                "description": "",
                "type": "object",
                "properties": {
                    "new_value?": {
                        "location": "json",
                        "type": "mixed",
                        "description": "new value of the key"
                    },
                    "old_value?": {
                        "location": "json",
                        "type": "mixed",
                        "description": "old value of the key"
                    },
                    "key": {
                        "location": "json",
                        "type": "string",
                        "description": "type of audit log change key"
                    }
                }
            }
        },
        "channel": {
            "channel": {
                "link": "https://discordapp.com/developers/docs/resources/channel#channel-object",
                "resource": "channel",
                "description": "",
                "type": "object",
                "properties": {
                    "id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "the id of this channel"
                    },
                    "type": {
                        "location": "json",
                        "type": "integer",
                        "description": "the type of channel"
                    },
                    "guild_id?": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "the id of the guild"
                    },
                    "position?": {
                        "location": "json",
                        "type": "integer",
                        "description": "sorting position of the channel"
                    },
                    "permission_overwrites?": {
                        "location": "json",
                        "type": "array",
                        "description": "explicit permission overwrites for members and roles"
                    },
                    "name?": {
                        "location": "json",
                        "type": "string",
                        "description": "the name of the channel (2-100 characters)"
                    },
                    "topic?": {
                        "location": "json",
                        "type": "string",
                        "description": "the channel topic (0-1024 characters)"
                    },
                    "nsfw?": {
                        "location": "json",
                        "type": "bool",
                        "description": "if the channel is nsfw",
                        "default": false
                    },
                    "last_message_id?": {
                        "location": "json",
                        "type": "snowflake",
                        "nullable": true,
                        "description": "the id of the last message sent in this channel (may not point to an existing or valid message)"
                    },
                    "bitrate?": {
                        "location": "json",
                        "type": "integer",
                        "description": "the bitrate (in bits) of the voice channel"
                    },
                    "user_limit?": {
                        "location": "json",
                        "type": "integer",
                        "description": "the user limit of the voice channel"
                    },
                    "recipients?": {
                        "location": "json",
                        "type": "array",
                        "description": "the recipients of the DM"
                    },
                    "icon?": {
                        "location": "json",
                        "type": "string",
                        "nullable": true,
                        "description": "icon hash"
                    },
                    "owner_id?": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "id of the DM creator"
                    },
                    "application_id?": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "application id of the group DM creator if it is bot-created"
                    },
                    "parent_id?": {
                        "location": "json",
                        "type": "snowflake",
                        "nullable": true,
                        "description": "id of the parent category for a channel"
                    },
                    "last_pin_timestamp?": {
                        "location": "json",
                        "type": "ISO8601 timestamp",
                        "description": "when the last pinned message was pinned"
                    }
                }
            },
            "message": {
                "link": "https://discordapp.com/developers/docs/resources/channel#message-object",
                "resource": "channel",
                "description": "",
                "type": "object",
                "properties": {
                    "id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "id of the message"
                    },
                    "channel_id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "id of the channel the message was sent in"
                    },
                    "author": {
                        "location": "json",
                        "type": "object",
                        "description": "the author of this message (not guaranteed to be a valid user, see below)"
                    },
                    "content": {
                        "location": "json",
                        "type": "string",
                        "description": "contents of the message"
                    },
                    "timestamp": {
                        "location": "json",
                        "type": "ISO8601 timestamp",
                        "description": "when this message was sent"
                    },
                    "edited_timestamp": {
                        "location": "json",
                        "type": "ISO8601 timestamp",
                        "nullable": true,
                        "description": "when this message was edited (or null if never)"
                    },
                    "tts": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether this was a TTS message",
                        "default": false
                    },
                    "mention_everyone": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether this message mentions everyone",
                        "default": false
                    },
                    "mentions": {
                        "location": "json",
                        "type": "array",
                        "description": "users specifically mentioned in the message"
                    },
                    "mention_roles": {
                        "location": "json",
                        "type": "array",
                        "description": "roles specifically mentioned in this message"
                    },
                    "attachments": {
                        "location": "json",
                        "type": "array",
                        "description": "any attached files"
                    },
                    "embeds": {
                        "location": "json",
                        "type": "array",
                        "description": "any embedded content"
                    },
                    "reactions?": {
                        "location": "json",
                        "type": "array",
                        "description": "reactions to the message"
                    },
                    "nonce?": {
                        "location": "json",
                        "type": "snowflake",
                        "nullable": true,
                        "description": "used for validating a message was sent"
                    },
                    "pinned": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether this message is pinned",
                        "default": false
                    },
                    "webhook_id?": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "if the message is generated by a webhook, this is the webhook's id"
                    },
                    "type": {
                        "location": "json",
                        "type": "int",
                        "description": "type of message"
                    }
                }
            },
            "reaction": {
                "link": "https://discordapp.com/developers/docs/resources/channel#reaction-object",
                "resource": "channel",
                "description": "",
                "type": "object",
                "properties": {
                    "count": {
                        "location": "json",
                        "type": "integer",
                        "description": "times this emoji has been used to react"
                    },
                    "me": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether the current user reacted using this emoji",
                        "default": false
                    },
                    "emoji": {
                        "location": "json",
                        "type": "object",
                        "description": "emoji information"
                    }
                }
            },
            "overwrite": {
                "link": "https://discordapp.com/developers/docs/resources/channel#overwrite-object",
                "resource": "channel",
                "description": "",
                "type": "object",
                "properties": {
                    "id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "role or user id"
                    },
                    "type": {
                        "location": "json",
                        "type": "string",
                        "description": "either \"role\" or \"member\""
                    },
                    "allow": {
                        "location": "json",
                        "type": "integer",
                        "description": "permission bit set"
                    },
                    "deny": {
                        "location": "json",
                        "type": "integer",
                        "description": "permission bit set"
                    }
                }
            },
            "embed": {
                "link": "https://discordapp.com/developers/docs/resources/channel#embed-object",
                "resource": "channel",
                "description": "",
                "type": "object",
                "properties": {
                    "title": {
                        "location": "json",
                        "type": "string",
                        "description": "title of embed"
                    },
                    "type": {
                        "location": "json",
                        "type": "string",
                        "description": "type of embed (always \"rich\" for webhook embeds)"
                    },
                    "description": {
                        "location": "json",
                        "type": "string",
                        "description": "description of embed"
                    },
                    "url": {
                        "location": "json",
                        "type": "string",
                        "description": "url of author"
                    },
                    "timestamp": {
                        "location": "json",
                        "type": "ISO8601 timestamp",
                        "description": "timestamp of embed content"
                    },
                    "color": {
                        "location": "json",
                        "type": "integer",
                        "description": "color code of the embed"
                    },
                    "footer": {
                        "location": "json",
                        "type": "object",
                        "description": "footer information"
                    },
                    "image": {
                        "location": "json",
                        "type": "object",
                        "description": "image information"
                    },
                    "thumbnail": {
                        "location": "json",
                        "type": "object",
                        "description": "thumbnail information"
                    },
                    "video": {
                        "location": "json",
                        "type": "object",
                        "description": "video information"
                    },
                    "provider": {
                        "location": "json",
                        "type": "object",
                        "description": "provider information"
                    },
                    "author": {
                        "location": "json",
                        "type": "object",
                        "description": "author information"
                    },
                    "fields": {
                        "location": "json",
                        "type": "array",
                        "description": "fields information"
                    },
                    "proxy_url": {
                        "location": "json",
                        "type": "string",
                        "description": "a proxied url of the image"
                    },
                    "height": {
                        "location": "json",
                        "type": "integer",
                        "description": "height of image"
                    },
                    "width": {
                        "location": "json",
                        "type": "integer",
                        "description": "width of image"
                    },
                    "name": {
                        "location": "json",
                        "type": "string",
                        "description": "name of the field"
                    },
                    "icon_url": {
                        "location": "json",
                        "type": "string",
                        "description": "url of footer icon (only supports http(s) and attachments)"
                    },
                    "proxy_icon_url": {
                        "location": "json",
                        "type": "string",
                        "description": "a proxied url of footer icon"
                    },
                    "text": {
                        "location": "json",
                        "type": "string",
                        "description": "footer text"
                    },
                    "value": {
                        "location": "json",
                        "type": "string",
                        "description": "value of the field"
                    },
                    "inline": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether or not this field should display inline",
                        "default": false
                    }
                }
            },
            "attachment": {
                "link": "https://discordapp.com/developers/docs/resources/channel#attachment-object",
                "resource": "channel",
                "description": "",
                "type": "object",
                "properties": {
                    "id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "attachment id"
                    },
                    "filename": {
                        "location": "json",
                        "type": "string",
                        "description": "name of file attached"
                    },
                    "size": {
                        "location": "json",
                        "type": "integer",
                        "description": "size of file in bytes"
                    },
                    "url": {
                        "location": "json",
                        "type": "string",
                        "description": "source url of file"
                    },
                    "proxy_url": {
                        "location": "json",
                        "type": "string",
                        "description": "a proxied url of file"
                    },
                    "height": {
                        "location": "json",
                        "type": "integer",
                        "nullable": true,
                        "description": "height of file (if image)"
                    },
                    "width": {
                        "location": "json",
                        "type": "integer",
                        "nullable": true,
                        "description": "width of file (if image)"
                    }
                }
            }
        },
        "emoji": {
            "emoji": {
                "link": "https://discordapp.com/developers/docs/resources/emoji#emoji-object",
                "resource": "emoji",
                "description": "",
                "type": "object",
                "properties": {
                    "id": {
                        "location": "json",
                        "type": "snowflake",
                        "nullable": true,
                        "description": "emoji id"
                    },
                    "name": {
                        "location": "json",
                        "type": "string",
                        "description": "name of the emoji"
                    },
                    "roles?": {
                        "location": "json",
                        "type": "array",
                        "description": "roles this emoji is whitelisted to"
                    },
                    "user?": {
                        "location": "json",
                        "type": "object",
                        "description": "user that created this emoji"
                    },
                    "require_colons?": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether this emoji must be wrapped in colons",
                        "default": false
                    },
                    "managed?": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether this emoji is managed",
                        "default": false
                    },
                    "animated?": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether this emoji is animated",
                        "default": false
                    },
                    "image": {
                        "location": "json",
                        "type": "base64 image data",
                        "description": "the 128x128 emoji image"
                    },
                    "roles": {
                        "location": "json",
                        "type": "array",
                        "description": "roles to which this emoji will be whitelisted"
                    }
                }
            }
        },
        "invite": {
            "invite": {
                "link": "https://discordapp.com/developers/docs/resources/invite#invite-object",
                "resource": "invite",
                "description": "",
                "type": "object",
                "properties": {
                    "code": {
                        "location": "json",
                        "type": "string",
                        "description": "the invite code (unique ID)"
                    },
                    "guild": {
                        "location": "json",
                        "type": "object",
                        "description": "the guild this invite is for"
                    },
                    "channel": {
                        "location": "json",
                        "type": "object",
                        "description": "the channel this invite is for"
                    }
                }
            },
            "inviteMetadata": {
                "link": "https://discordapp.com/developers/docs/resources/invite#invite-metadata-object",
                "resource": "invite",
                "description": "",
                "type": "object",
                "properties": {
                    "inviter": {
                        "location": "json",
                        "type": "object",
                        "description": "user who created the invite"
                    },
                    "uses": {
                        "location": "json",
                        "type": "integer",
                        "description": "number of times this invite has been used"
                    },
                    "max_uses": {
                        "location": "json",
                        "type": "integer",
                        "description": "max number of times this invite can be used"
                    },
                    "max_age": {
                        "location": "json",
                        "type": "integer",
                        "description": "duration (in seconds) after which the invite expires"
                    },
                    "temporary": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether this invite only grants temporary membership",
                        "default": false
                    },
                    "created_at": {
                        "location": "json",
                        "type": "ISO8601 timestamp",
                        "description": "when this invite was created"
                    },
                    "revoked": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether this invite is revoked",
                        "default": false
                    }
                }
            }
        },
        "user": {
            "user": {
                "link": "https://discordapp.com/developers/docs/resources/user#user-object",
                "resource": "user",
                "description": "",
                "type": "object",
                "properties": {
                    "id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "the user's id",
                        "extra": {
                            "Required OAuth2 Scope": "identify"
                        }
                    },
                    "username": {
                        "location": "json",
                        "type": "string",
                        "description": "the user's username, not unique across the platform",
                        "extra": {
                            "Required OAuth2 Scope": "identify"
                        }
                    },
                    "discriminator": {
                        "location": "json",
                        "type": "string",
                        "description": "the user's 4-digit discord-tag",
                        "extra": {
                            "Required OAuth2 Scope": "identify"
                        }
                    },
                    "avatar": {
                        "location": "json",
                        "type": "string",
                        "nullable": true,
                        "description": "the user's avatar hash",
                        "extra": {
                            "Required OAuth2 Scope": "identify"
                        }
                    },
                    "bot?": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether the user belongs to an OAuth2 application",
                        "default": false,
                        "extra": {
                            "Required OAuth2 Scope": "identify"
                        }
                    },
                    "mfa_enabled?": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether the user has two factor enabled on their account",
                        "default": false,
                        "extra": {
                            "Required OAuth2 Scope": "identify"
                        }
                    },
                    "verified?": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether the email on this account has been verified",
                        "default": false,
                        "extra": {
                            "Required OAuth2 Scope": "email"
                        }
                    },
                    "email?": {
                        "location": "json",
                        "type": "string",
                        "description": "the user's email",
                        "extra": {
                            "Required OAuth2 Scope": "email"
                        }
                    }
                }
            },
            "connection": {
                "link": "https://discordapp.com/developers/docs/resources/user#connection-object",
                "resource": "user",
                "description": "",
                "type": "object",
                "properties": {
                    "id": {
                        "location": "json",
                        "type": "string",
                        "description": "id of the connection account"
                    },
                    "name": {
                        "location": "json",
                        "type": "string",
                        "description": "the username of the connection account"
                    },
                    "type": {
                        "location": "json",
                        "type": "string",
                        "description": "the service of the connection (twitch, youtube)"
                    },
                    "revoked": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether the connection is revoked",
                        "default": false
                    },
                    "integrations": {
                        "location": "json",
                        "type": "array",
                        "description": "an array of partial server integrations"
                    },
                    "username": {
                        "location": "json",
                        "type": "string",
                        "description": "users username, if changed may cause the users discriminator to be randomized."
                    },
                    "avatar": {
                        "location": "json",
                        "type": "avatar data",
                        "description": "if passed, modifies the user's avatar"
                    },
                    "before": {
                        "location": "query",
                        "type": "snowflake",
                        "description": "get guilds before this guild ID",
                        "extra": {
                            "Required": "false"
                        }
                    },
                    "after": {
                        "location": "query",
                        "type": "snowflake",
                        "description": "get guilds after this guild ID",
                        "extra": {
                            "Required": "false"
                        }
                    },
                    "limit": {
                        "location": "query",
                        "type": "integer",
                        "description": "max number of guilds to return (1-100)",
                        "default": 100,
                        "extra": {
                            "Required": "false"
                        }
                    },
                    "recipient_id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "the recipient to open a DM channel with"
                    },
                    "access_tokens": {
                        "location": "json",
                        "type": "array",
                        "description": "access tokens of users that have granted your app the gdm.join scope"
                    },
                    "nicks": {
                        "location": "json",
                        "type": "dict",
                        "description": "a dictionary of user ids to their respective nicknames"
                    }
                }
            }
        },
        "voice": {
            "voiceState": {
                "link": "https://discordapp.com/developers/docs/resources/voice#voice-state-object",
                "resource": "voice",
                "description": "",
                "type": "object",
                "properties": {
                    "guild_id?": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "the guild id this voice state is for"
                    },
                    "channel_id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "the channel id this user is connected to"
                    },
                    "user_id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "the user id this voice state is for"
                    },
                    "session_id": {
                        "location": "json",
                        "type": "string",
                        "description": "the session id for this voice state"
                    },
                    "deaf": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether this user is deafened by the server",
                        "default": false
                    },
                    "mute": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether this user is muted by the server",
                        "default": false
                    },
                    "self_deaf": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether this user is locally deafened",
                        "default": false
                    },
                    "self_mute": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether this user is locally muted",
                        "default": false
                    },
                    "suppress": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether this user is muted by the current user",
                        "default": false
                    }
                }
            }
        },
        "webhook": {
            "webhook": {
                "link": "https://discordapp.com/developers/docs/resources/webhook#webhook-object",
                "resource": "webhook",
                "description": "",
                "type": "object",
                "properties": {
                    "id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "the id of the webhook"
                    },
                    "guild_id?": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "the guild id this webhook is for"
                    },
                    "channel_id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "the new channel id this webhook should be moved to"
                    },
                    "user?": {
                        "location": "json",
                        "type": "object",
                        "description": "the user this webhook was created by (not returned when getting a webhook with its token)"
                    },
                    "name": {
                        "location": "json",
                        "type": "string",
                        "description": "the default name of the webhook"
                    },
                    "avatar": {
                        "location": "json",
                        "type": "avatar data string",
                        "description": "image for the default webhook avatar"
                    },
                    "token": {
                        "location": "json",
                        "type": "string",
                        "description": "the secure token of the webhook"
                    },
                    "wait": {
                        "location": "query",
                        "type": "bool",
                        "description": "waits for server confirmation of message send before response (defaults to true; when false a message that is not saved does not return an error)",
                        "default": false,
                        "extra": {
                            "Required": "false"
                        }
                    },
                    "content": {
                        "location": "json",
                        "type": "string",
                        "description": "the message contents (up to 2000 characters)",
                        "extra": {
                            "Required": "one of content, file, embeds"
                        }
                    },
                    "username": {
                        "location": "json",
                        "type": "string",
                        "description": "override the default username of the webhook",
                        "extra": {
                            "Required": "false"
                        }
                    },
                    "avatar_url": {
                        "location": "json",
                        "type": "string",
                        "description": "override the default avatar of the webhook",
                        "extra": {
                            "Required": "false"
                        }
                    },
                    "tts": {
                        "location": "json",
                        "type": "bool",
                        "description": "true if this is a TTS message",
                        "default": false,
                        "extra": {
                            "Required": "false"
                        }
                    },
                    "file": {
                        "location": "json",
                        "type": "file contents",
                        "description": "the contents of the file being sent",
                        "extra": {
                            "Required": "one of content, file, embeds"
                        }
                    },
                    "embeds": {
                        "location": "json",
                        "type": "array",
                        "description": "embedded rich content",
                        "extra": {
                            "Required": "one of content, file, embeds"
                        }
                    }
                }
            }
        },
        "gateway": {},
        "oauth2": {},
        "permissions": {
            "role": {
                "link": "https://discordapp.com/developers/docs/topics/permissions#role-object",
                "resource": "permissions",
                "description": "",
                "type": "object",
                "properties": {
                    "id": {
                        "location": "json",
                        "type": "snowflake",
                        "description": "role id"
                    },
                    "name": {
                        "location": "json",
                        "type": "string",
                        "description": "role name"
                    },
                    "color": {
                        "location": "json",
                        "type": "integer",
                        "description": "integer representation of hexadecimal color code"
                    },
                    "hoist": {
                        "location": "json",
                        "type": "bool",
                        "description": "if this role is pinned in the user listing",
                        "default": false
                    },
                    "position": {
                        "location": "json",
                        "type": "integer",
                        "description": "position of this role"
                    },
                    "permissions": {
                        "location": "json",
                        "type": "integer",
                        "description": "permission bit set"
                    },
                    "managed": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether this role is managed by an integration",
                        "default": false
                    },
                    "mentionable": {
                        "location": "json",
                        "type": "bool",
                        "description": "whether this role is mentionable",
                        "default": false
                    }
                }
            }
        }
    }
}